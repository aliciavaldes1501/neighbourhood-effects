library(dplyr)
library(foreign)
mplants1<-read.table("./data/raw/tanga2016_plants1.txt",header=T,sep="\t",dec=".")
mplants1<-read.table("D;/SU/projects/neighbourhood_effects/data/raw/tanga2016_plants1.txt",header=T,sep="\t",dec=".")
mplants1<-read.table("D:/SU/projects/neighbourhood_effects/data/raw/tanga2016_plants1.txt",header=T,sep="\t",dec=".")
b
mplants2<-read.table("D:/SU/projects/neighbourhood_effects/data/raw/tanga2016_plants2.txt",header=T,sep="\t",dec=".")
mplants3<-read.table("D:/SU/projects/neighbourhood_effects/data/raw/tanga2016_plants3.txt",header=T,sep="\t",dec=".")
mplants1$plot_id<-as.factor(mplants1$plot_id)
mplants2$comments2<-as.character(mplants2$comments2)
mplants2$new_mark<-as.factor(mplants2$new_mark)
mplants2$plot_id<-as.factor(mplants2$plot_id)
mplants3$comments3<-as.character(mplants3$comments3)
head(mplants1)
tail(mplants1)
head(mplants2)
tail(mplants2)
head(mplants3)
tail(mplants3)
str(mplants1) #621 plants
str(mplants2) #708 plants
str(mplants3) #715 plants
head(subset(mplants2,new_mark==0)[1:7]) #Data from already marked plants on visit 2
str(subset(mplants2,new_mark==0)[1:7]) #614 plants
mplants<-merge(mplants1,subset(mplants2,new_mark==0)[1:7],all.x=T,all.y=T)
head(mplants)
str(mplants) #621
subset(mplants,is.na(new_mark)) #7 plants marked on visit 1 that had no data on visit 2
mplants[c("new_mark")][is.na(mplants[c("new_mark")])] <- 0
mplants[c("comments2")][is.na(mplants[c("comments2")])] <- "Not included in mplants2. This comment was manually typed in R"
subset(mplants,is.na(n_fl))
head(mplants)
str(mplants)
head(subset(mplants2,new_mark==1)) #Data from newly marked plants on visit 2
str(subset(mplants2,new_mark==1)) # 94 plants
mplants<-merge(mplants,subset(mplants2,new_mark==1),all.x=T,all.y=T)
head(mplants)
str(mplants) # 715 plants
mplants<-merge(mplants,mplants3,all.x=T,all.y=T)
head(mplants)
str(mplants) # 715 plants
names(mplants)
mplants <- select(mplants,
pl_id,plot_id,n_shoots,n_fl,shoot_h,phen,n_eggs_1,n_eggs_2,veg_h_1,veg_h_2,
bud_in,bud_pr,bud_ab,fl_in,fl_pr,fl_ab,fr_in,fr_inC,fr_pr,fr_prC,fr_ab,
new_mark,state_after_2,state_after_3,comments2,comments3)
head(mplants)
mplants$phenn <- vector("character",length(mplants$phen))
mplants$phenn[ mplants$phen=="a"] <- 1
mplants$phenn[ mplants$phen=="b"] <- 2
mplants$phenn[ mplants$phen=="c"] <- 3
mplants$phenn[ mplants$phen=="d"] <- 4
mplants$phenn[ mplants$phen=="e"] <- 5
mplants$phenn[ mplants$phen=="f"] <- 6
mplants$phenn<-as.integer(mplants$phenn)
library(ggplot2)
library(tidyr)
library(reshape2)
library(ggthemes)
library(foreign)
ants_T<-read.table("D:/SU/projects/neighbourhood_effects/data/raw/tanga2016_ants.txt",header=T,sep="\t",dec=".")
head(ants_T)
ants_T_long<-gather(ants_T,species,number,Mrubra,Mscabrinodis,Mruginodis,Mschencki,others,factor_key=TRUE)
head(ants_T_long)
ants_T_long$date_id<-as.factor(ifelse(ants_T_long$date=="03/09/2016","date2","date1"))
ants_T_long_wide <-dcast(ants_T_long, point_id + species ~ date_id, value.var="number",fun.aggregate=sum)
ants_T_long_wide$sumdates<-ants_T_long_wide$date1+ants_T_long_wide$date2
ants_T_long_wide$meandates<-(ants_T_long_wide$date1+ants_T_long_wide$date2)/2
ants_T_long_wide$maxdates<-pmax(ants_T_long_wide$date1,ants_T_long_wide$date2)
ants_T_long_wide$pres<-ifelse(ants_T_long_wide$sumdates>0,1,0)
head(ants_T_long_wide)
cor(ants_T_long_wide[5:7])
pdf("D:/SU/projects/neighbourhood_effects/results/figures/ant_counts_T.pdf", family="Times")
ggplot(ants_T_long,aes(x=species,y=number))+geom_bar(stat="identity")+guides(fill=FALSE)+
xlab("Species")+ylab("Total number of individuals")+
theme_base()+theme(plot.background=element_rect(fill="white", colour=NA))
ggplot(ants_T_long_wide,aes(x=species,y=pres))+geom_bar(stat="identity")+guides(fill=FALSE)+
xlab("Species")+ylab("Number of points with presence")+
theme_base()+theme(plot.background=element_rect(fill="white", colour=NA))
dev.off()
dev.off()
library(anytime)
library(plyr)
library(foreign)
loggers<-read.table("D:/SU/projects/neighbourhood_effects/data/raw/tanga2016_loggers.txt",header=T,sep="\t",dec=".")
head(loggers)
str(loggers)
loggers$date<-as.Date(as.character(loggers$date),format="%d/%m/%Y")
loggers<-subset(loggers,!Location==381)
loggers$timeday<-ifelse(loggers$hour==1|loggers$hour==4|loggers$hour==22,yes="night",no="day")
loggers_day<-subset(loggers,timeday=="day")
loggers_agg<-ddply(loggers,c("Location","date"), summarise,
meanT = mean(LogData),
maxT = max(LogData),
minT = min(LogData),
sdT  = sd(LogData))
loggers_agg$rangeT<-loggers_agg$maxT-loggers_agg$minT
head(loggers_agg)
loggers_agg<-aggregate(cbind(meanT, maxT, minT, sdT, rangeT) ~ Location, data=loggers_agg, FUN=mean)
head(loggers_agg)
str(loggers_agg)
loggers_day_agg<-ddply(loggers_day,c("Location","date"), summarise,
meanT = mean(LogData),
maxT = max(LogData),
minT = min(LogData),
sdT  = sd(LogData))
loggers_day_agg$rangeT<-loggers_day_agg$maxT-loggers_day_agg$minT
head(loggers_day_agg)
loggers_day_agg<-aggregate(cbind(meanT, maxT, minT, sdT, rangeT) ~ Location, data=loggers_day_agg, FUN=mean)
head(loggers_day_agg)
str(loggers_day_agg)
cor(loggers_agg[2:6])
cor(loggers_day_agg[2:6])
library(sp)
library(raster)
library(rgdal)
library(maptools)
library(gstat)
library(lattice)
library(ggplot2)
library(automap)
library(intamap)
library(gridExtra)
data_pts<-read.table("./data/clean/points_all_data.txt",header=T,sep="\t",dec=".")
data_pts<-read.table("D:/SU/projects/neighbourhood_effects/data/clean/points_all_data.txt",header=T,sep="\t",dec=".")
head(data_pts)
str(data_pts)
coordinates(data_pts) <- c("x", "y")
project1<-"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" #RT90 0 gon (spatialreference.org)
proj4string(data_pts) = CRS(project1) #assign CRS with projected coordinates
spplot(data_pts, "meanTday", do.log=T, colorkey = TRUE)
plot(data_pts)
locator(4)
min_x =1499923 #minimun x coordinate
min_y =-51.043612 #minimun y coordinate
x_length = 1499995 - min_x #easting amplitude
y_length = -2.330070 - min_y #northing amplitude
cellsize = 0.18 #pixel size
ncol = round(x_length/cellsize,0) #number of columns in grid
nrow = round(y_length/cellsize,0) #number of rows in grid
grd1<-GridTopology(cellcentre.offset=c(min_x,min_y),cellsize=c(cellsize,cellsize),cells.dim=c(ncol,nrow))
grd1<-SpatialPixelsDataFrame(grd1,
data=data.frame(id=1:prod(ncol,nrow)),
proj4string=CRS(project1))
plot(grd1)
mask<-readShapePoly("D:/SU/projects/neighbourhood_effects/gis/shapefiles/mask_20cm.shp",IDvar=NULL,proj4string=CRS(project1))
plot(mask)
mask<-mask@polygons
mask<-SpatialPolygons(mask, proj4string=CRS(project1))
plot(mask)
grd1<-grd1[!is.na(over(grd1, mask)),]
plot(grd1)
data_pts_t<-data_pts[!is.na(data_pts$meanTday),]
estimateAnisotropy(data_pts_t,formulaString=meanT~1)
estimateAnisotropy(data_pts_t,formulaString=maxT~1)
estimateAnisotropy(data_pts_t,formulaString=minT~1)
estimateAnisotropy(data_pts_t,formulaString=sdT~1)
estimateAnisotropy(data_pts_t,formulaString=rangeT~1)
estimateAnisotropy(data_pts_t,formulaString=meanTday~1)
estimateAnisotropy(data_pts_t,formulaString=maxTday~1)
estimateAnisotropy(data_pts_t,formulaString=minTday~1)
estimateAnisotropy(data_pts_t,formulaString=sdTday~1)
estimateAnisotropy(data_pts_t,formulaString=rangeTday~1)
estimateAnisotropy(data_pts,formulaString=MOIST_PER_M~1)#anisotropy
estimateAnisotropy(data_pts,formulaString=MOIST_MV_M~1)#anisotropy
krig1_meanT <-autoKrige(meanT~1,data_pts_t,grd1,verbose=T)
krig1_maxT <-autoKrige(maxT~1,data_pts_t,grd1,verbose=T)
krig1_minT <-autoKrige(minT~1,data_pts_t,grd1,verbose=T)
krig1_sdT <-autoKrige(sdT~1,data_pts_t,grd1,verbose=T)
krig1_rangeT <-autoKrige(rangeT~1,data_pts_t,grd1,verbose=T)
krig1_meanTday <-autoKrige(meanTday~1,data_pts_t,grd1,verbose=T)
krig1_maxTday <-autoKrige(maxTday~1,data_pts_t,grd1,verbose=T)
krig1_minTday <-autoKrige(minTday~1,data_pts_t,grd1,verbose=T)
krig1_sdTday <-autoKrige(sdTday~1,data_pts_t,grd1,verbose=T)
krig1_rangeTday <-autoKrige(rangeTday~1,data_pts_t,grd1,verbose=T)
krig1_MOIST_PER <-autoKrige(MOIST_PER_M~1,data_pts,grd1,verbose=T)
krig1_MOIST_MV <-autoKrige(MOIST_MV_M~1,data_pts,grd1,verbose=T)
pdf("D:/SU/projects/neighbourhood_effects/results/figures/kriging_temp_moist.pdf", family="Times",width=8,height=8)
plot(krig1_meanT)
plot(krig1_maxT)
plot(krig1_minT)
plot(krig1_sdT)
plot(krig1_rangeT)
plot(krig1_meanTday)
plot(krig1_maxTday)
plot(krig1_minTday)
plot(krig1_sdTday)
plot(krig1_rangeTday)
plot(krig1_MOIST_PER)
plot(krig1_MOIST_MV)
dev.off()
krig1_meanT.cv<-autoKrige.cv(meanT~1,data_pts_t,model=c("Ste"))
krig1_maxT.cv<-autoKrige.cv(maxT~1,data_pts_t,model=c("Ste"))
krig1_minT.cv<-autoKrige.cv(minT~1,data_pts_t,model=c("Ste"))
krig1_sdT.cv<-autoKrige.cv(sdT~1,data_pts_t,model=c("Ste"))
krig1_rangeT.cv<-autoKrige.cv(rangeT~1,data_pts_t,model=c("Ste"))
krig1_meanTday.cv<-autoKrige.cv(meanTday~1,data_pts_t,model=c("Ste"))
krig1_maxTday.cv<-autoKrige.cv(maxTday~1,data_pts_t,model=c("Ste"))
krig1_minTday.cv<-autoKrige.cv(minTday~1,data_pts_t,model=c("Ste"))
krig1_sdTday.cv<-autoKrige.cv(sdTday~1,data_pts_t,model=c("Ste"))
krig1_rangeTday.cv<-autoKrige.cv(rangeTday~1,data_pts_t,model=c("Ste"))
krig1_MOIST_PER.cv<-autoKrige.cv(MOIST_PER_M~1,data_pts,model=c("Ste"))
krig1_MOIST_MV.cv<-autoKrige.cv(MOIST_MV_M~1,data_pts,model=c("Ste"))
summary(krig1_meanT.cv)
summary(krig1_maxT.cv)
summary(krig1_minT.cv)
summary(krig1_sdT.cv)
summary(krig1_rangeT.cv)
summary(krig1_meanTday.cv)
summary(krig1_maxTday.cv)
summary(krig1_minTday.cv)
summary(krig1_sdTday.cv)
summary(krig1_rangeTday.cv)
summary(krig1_MOIST_PER.cv)
summary(krig1_MOIST_MV.cv)
krig1_meanT.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_meanT.out[i] <- krige(meanT ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_meanT$var_model)$var1.pred
}
krig1_maxT.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_maxT.out[i] <- krige(maxT ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_maxT$var_model)$var1.pred
}
krig1_minT.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_minT.out[i] <- krige(minT ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_minT$var_model)$var1.pred
}
krig1_sdT.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_sdT.out[i] <- krige(sdT ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_sdT$var_model)$var1.pred
}
krig1_rangeT.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_rangeT.out[i] <- krige(rangeT ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_rangeT$var_model)$var1.pred
}
krig1_meanTday.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_meanTday.out[i] <- krige(meanTday ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_meanTday$var_model)$var1.pred
}
krig1_maxTday.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_maxTday.out[i] <- krige(maxTday ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_maxTday$var_model)$var1.pred
}
krig1_minTday.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_minTday.out[i] <- krige(minTday ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_minTday$var_model)$var1.pred
}
krig1_sdTday.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_sdTday.out[i] <- krige(sdTday ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_sdTday$var_model)$var1.pred
}
krig1_rangeTday.out <- vector(length = length(data_pts_t))
for (i in 1:length(data_pts_t)) {
krig1_rangeTday.out[i] <- krige(rangeTday ~ 1, data_pts_t[-i,], data_pts_t[i,], model = krig1_rangeTday$var_model)$var1.pred
}
krig1_MOIST_PER.out <- vector(length = length(data_pts))
for (i in 1:length(data_pts)) {
krig1_MOIST_PER.out[i] <- krige(MOIST_PER_M ~ 1, data_pts[-i,], data_pts[i,], model = krig1_MOIST_PER$var_model)$var1.pred
}
krig1_MOIST_MV.out <- vector(length = length(data_pts))
for (i in 1:length(data_pts)) {
krig1_MOIST_MV.out[i] <- krige(MOIST_MV_M ~ 1, data_pts[-i,], data_pts[i,], model = krig1_MOIST_MV$var_model)$var1.pred
}
sqrt( sum((krig1_meanT.out - data_pts_t$meanT)^2) / length(data_pts_t))
sqrt( sum((krig1_maxT.out - data_pts_t$maxT)^2) / length(data_pts_t))
sqrt( sum((krig1_minT.out - data_pts_t$minT)^2) / length(data_pts_t))
sqrt( sum((krig1_sdT.out - data_pts_t$sdT)^2) / length(data_pts_t))
sqrt( sum((krig1_rangeT.out - data_pts_t$rangeT)^2) / length(data_pts_t))
sqrt( sum((krig1_meanTday.out - data_pts_t$meanTday)^2) / length(data_pts_t))
sqrt( sum((krig1_maxTday.out - data_pts_t$maxTday)^2) / length(data_pts_t))
sqrt( sum((krig1_minTday.out - data_pts_t$minTday)^2) / length(data_pts_t))
sqrt( sum((krig1_sdTday.out - data_pts_t$sdTday)^2) / length(data_pts_t))
sqrt( sum((krig1_rangeTday.out - data_pts_t$rangeTday)^2) / length(data_pts_t))
sqrt( sum((krig1_MOIST_PER.out - data_pts$MOIST_PER_M)^2) / length(data_pts))
sqrt( sum((krig1_MOIST_MV.out - data_pts$MOIST_MV_M)^2) / length(data_pts))
pdf("./results/figures/kriging_temp_moist_validation.pdf", family="Times",width=12,height=8)
pdf("D:/SU/projects/neighbourhood_effects/results/figures/kriging_temp_moist_validation.pdf", family="Times",width=12,height=8)
par(mfrow=c(2,3))
plot(krig1_meanT.out ~ data_pts_t$meanT, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation meanT")
abline(lm(krig1_meanT.out ~ data_pts_t$meanT), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_maxT.out ~ data_pts_t$maxT, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation maxT")
abline(lm(krig1_maxT.out ~ data_pts_t$maxT), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_minT.out ~ data_pts_t$minT, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation minT")
abline(lm(krig1_minT.out ~ data_pts_t$minT), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_sdT.out ~ data_pts_t$sdT, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation sdT")
abline(lm(krig1_sdT.out ~ data_pts_t$sdT), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_rangeT.out ~ data_pts_t$rangeT, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation rangeT")
abline(lm(krig1_rangeT.out ~ data_pts_t$rangeT), col="red", lw=2,lty=2)
abline(0,1)
par(mfrow=c(2,3))
plot(krig1_meanTday.out ~ data_pts_t$meanTday, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation meanTday")
abline(lm(krig1_meanTday.out ~ data_pts_t$meanTday), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_maxTday.out ~ data_pts_t$maxTday, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation maxTday")
abline(lm(krig1_maxTday.out ~ data_pts_t$maxTday), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_minTday.out ~ data_pts_t$minTday, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation minTday")
abline(lm(krig1_minTday.out ~ data_pts_t$minTday), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_sdTday.out ~ data_pts_t$sdTday, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation sdTday")
abline(lm(krig1_sdTday.out ~ data_pts_t$sdTday), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_rangeTday.out ~ data_pts_t$rangeTday, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation rangeTday")
abline(lm(krig1_rangeTday.out ~ data_pts_t$rangeTday), col="red", lw=2,lty=2)
abline(0,1)
par(mfrow=c(2,3))
plot(krig1_MOIST_PER.out ~ data_pts$MOIST_PER_M, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation MOIST_PER")
abline(lm(krig1_MOIST_PER.out ~ data_pts$MOIST_PER_M), col="red", lw=2,lty=2)
abline(0,1)
plot(krig1_MOIST_MV.out ~ data_pts$MOIST_MV_M, asp=1, xlab="Observed", ylab="Predicted", pch=16,
col=rgb(0,0,0,0.5),main="Validation MOIST_MV")
abline(lm(krig1_MOIST_MV.out ~ data_pts$MOIST_MV_M), col="red", lw=2,lty=2)
abline(0,1)
dev.off()
dev.off()
dev.off()
idw1_Mrub_sum<-idw(Mrub_sum ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Msca_sum<-idw(Msca_sum ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrug_sum<-idw(Mrug_sum ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Msch_sum<-idw(Msch_sum ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_oth_sum<-idw(oth_sum ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrub_max<-idw(Mrub_max ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Msca_max<-idw(Msca_max ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrug_max<-idw(Mrug_max ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Msch_max<-idw(Msch_max ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_oth_max<-idw(oth_max ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrub_pres<-idw(Mrub_pres ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Msca_pres<-idw(Msca_pres ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrug_pres<-idw(Mrug_pres ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Msch_pres<-idw(Msch_pres ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_oth_pres<-idw(oth_pres ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_allM_sum<-idw(allM_sum ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_allM_max<-idw(allM_max ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_allM_pres<-idw(allM_pres ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrub_rug_s<-idw(Mrub_rug_s ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrub_rug_m<-idw(Mrub_rug_m ~ 1, data_pts, grd1, idp = 1, maxdist=3)
idw1_Mrub_rug_p<-idw(Mrub_rug_p ~ 1, data_pts, grd1, idp = 1, maxdist=3)
allplants<-read.table("D:/SU/projects/neighbourhood_effects/gis/tables/plants_wmdata.txt",header=T,sep="\t",dec=".")
head(allplants)
str(allplants)
allplants$idMark<-NULL
allplants$date_map<-NULL
allplants$OID_<-NULL
allplants$plot_id<-NULL
allplants$phen_1<-NULL
allplants$eggs<-ifelse(allplants$pl_id>0,NA,allplants$eggs)
allplants$pl_id<-ifelse(allplants$pl_id>0,allplants$pl_id,NA)
allplants$n_shoots<-ifelse(is.na(allplants$pl_id),NA,allplants$n_shoots)
allplants$n_fl<-ifelse(is.na(allplants$pl_id),NA,allplants$n_fl)
allplants$shoot_h<-ifelse(is.na(allplants$pl_id),NA,allplants$shoot_h)
allplants$n_eggs_1<-ifelse(is.na(allplants$pl_id),NA,allplants$n_eggs_1)
allplants$n_eggs_2<-ifelse(is.na(allplants$pl_id),NA,allplants$n_eggs_2)
allplants[allplants == -9999] <- NA
allplants$veg_h_1<-ifelse(is.na(allplants$pl_id),NA,allplants$veg_h_1)
allplants$veg_h_2<-ifelse(is.na(allplants$pl_id),NA,allplants$veg_h_2)
allplants$bud_in<-ifelse(is.na(allplants$pl_id),NA,allplants$bud_in)
allplants$bud_pr<-ifelse(is.na(allplants$pl_id),NA,allplants$bud_pr)
allplants$bud_ab<-ifelse(is.na(allplants$pl_id),NA,allplants$bud_ab)
allplants$fl_in<-ifelse(is.na(allplants$pl_id),NA,allplants$fl_in)
allplants$fl_pr<-ifelse(is.na(allplants$pl_id),NA,allplants$fl_pr)
allplants$fl_ab<-ifelse(is.na(allplants$pl_id),NA,allplants$fl_ab)
allplants$fr_in<-ifelse(is.na(allplants$pl_id),NA,allplants$fr_in)
allplants$fr_inC<-ifelse(is.na(allplants$pl_id),NA,allplants$fr_inC)
allplants$fr_pr<-ifelse(is.na(allplants$pl_id),NA,allplants$fr_pr)
allplants$fr_prC<-ifelse(is.na(allplants$pl_id),NA,allplants$fr_prC)
allplants$fr_ab<-ifelse(is.na(allplants$pl_id),NA,allplants$fr_ab)
allplants$state_afte<-ifelse(is.na(allplants$pl_id),NA,allplants$state_afte)
allplants$state_af_1<-ifelse(is.na(allplants$pl_id),NA,allplants$state_af_1)
allplants$n_eggs_max<-with(allplants,pmax(eggs,n_eggs_1,n_eggs_2,na.rm=T))
allplants$veg_h_mean<-rowMeans(allplants[,10:11],na.rm=T)
allplants$veg_h_mean[is.nan(allplants$veg_h_mean)==TRUE] <- NA
coordinates(allplants) <- c("x", "y")
proj4string(allplants) = CRS(project1) #assign CRS with projected coordinates
plot(allplants)
head(allplants)
tail(allplants)
str(allplants)
allplants$meanT<-over(allplants,krig1_meanT$krige_output)$var1.pred
allplants$maxT<-over(allplants,krig1_maxT$krige_output)$var1.pred
allplants$minT<-over(allplants,krig1_minT$krige_output)$var1.pred
allplants$sdT<-over(allplants,krig1_sdT$krige_output)$var1.pred
allplants$rangeT<-over(allplants,krig1_rangeT$krige_output)$var1.pred
allplants$meanTday<-over(allplants,krig1_meanTday$krige_output)$var1.pred
allplants$maxTday<-over(allplants,krig1_maxTday$krige_output)$var1.pred
allplants$minTday<-over(allplants,krig1_minTday$krige_output)$var1.pred
allplants$sdTday<-over(allplants,krig1_sdTday$krige_output)$var1.pred
allplants$rangeTday<-over(allplants,krig1_rangeTday$krige_output)$var1.pred
allplants$moist_per<-over(allplants,krig1_MOIST_PER$krige_output)$var1.pred
allplants$moist_mv<-over(allplants,krig1_MOIST_MV$krige_output)$var1.pred
allplants$Mrub_sum<-over(allplants,idw1_Mrub_sum)$var1.pred
allplants$Msca_sum<-over(allplants,idw1_Msca_sum)$var1.pred
allplants$Mrug_sum<-over(allplants,idw1_Mrug_sum)$var1.pred
allplants$Msch_sum<-over(allplants,idw1_Msch_sum)$var1.pred
allplants$oth_sum<-over(allplants,idw1_oth_sum)$var1.pred
allplants$Mrub_max<-over(allplants,idw1_Mrub_max)$var1.pred
allplants$Msca_max<-over(allplants,idw1_Msca_max)$var1.pred
allplants$Mrug_max<-over(allplants,idw1_Mrug_max)$var1.pred
allplants$Msch_max<-over(allplants,idw1_Msch_max)$var1.pred
allplants$oth_max<-over(allplants,idw1_oth_max)$var1.pred
allplants$Mrub_pres<-over(allplants,idw1_Mrub_pres)$var1.pred
allplants$Msca_pres<-over(allplants,idw1_Msca_pres)$var1.pred
allplants$Mrug_pres<-over(allplants,idw1_Mrug_pres)$var1.pred
allplants$Msch_pres<-over(allplants,idw1_Msch_pres)$var1.pred
allplants$oth_pres<-over(allplants,idw1_oth_pres)$var1.pred
allplants$allM_sum<-over(allplants,idw1_allM_sum)$var1.pred
allplants$allM_max<-over(allplants,idw1_allM_max)$var1.pred
allplants$allM_pres<-over(allplants,idw1_allM_pres)$var1.pred
allplants$Mrub_rug_s<-over(allplants,idw1_Mrub_rug_s)$var1.pred
allplants$Mrub_rug_m<-over(allplants,idw1_Mrub_rug_m)$var1.pred
allplants$Mrub_rug_p<-over(allplants,idw1_Mrub_rug_p)$var1.pred
gridded(krig1_meanT$krige_output)<-TRUE
gridded(idw1_Mrub_sum)<-TRUE
krig1_meanT
mplants_GIS<-subset(allplants,!is.na(pl_id))
mplants_noGIS<-mplants[!mplants$pl_id %in% mplants_GIS$pl_id,]
str(mplants_GIS)
str(mplants_noGIS)
plants_pldens<-read.table("./gis/tables/plants_pldens.txt",header=T,sep=",",dec=".")
plants_pldens<-read.table("D:/SU/projects/neighbourhood_effects/gis/tables/plants_pldens.txt",header=T,sep=",",dec=".")
head(plants_pldens)
str(plants_pldens)
allplants<-merge(allplants,plants_pldens)
head(allplants)
plants_phen_neigh<-read.table("D:/SU/projects/neighbourhood_effects/gis/tables/plants_phen_neigh.txt",header=T,sep=",",dec=".")
head(plants_phen_neigh)
str(plants_phen_neigh)
plants_phen_neigh$FID_1<-NULL
plants_phen_neigh$FID_12<-NULL
plants_phen_neigh$FID_12_13<-NULL
plants_phen_neigh$FID_12_13_14<-NULL
plants_phen_neigh$OID_<-NULL
plants_phen_neigh$phen_n05<-with(plants_phen_neigh,ifelse(phen_num==-9999,phen_n05_s/phen_n05_c,
((phen_n05_s-phen_num)/(phen_n05_c-1))
))
plants_phen_neigh$phen_n1<-with(plants_phen_neigh,ifelse(phen_num==-9999,phen_n1_s/phen_n1_c,
((phen_n1_s-phen_num)/(phen_n1_c-1))
))
plants_phen_neigh$phen_n2<-with(plants_phen_neigh,ifelse(phen_num==-9999,phen_n2_s/phen_n2_c,
((phen_n2_s-phen_num)/(phen_n2_c-1))
))
plants_phen_neigh$phen_n5<-with(plants_phen_neigh,ifelse(phen_num==-9999,phen_n5_s/phen_n5_c,
((phen_n5_s-phen_num)/(phen_n5_c-1))
))
plants_phen_neigh$phen_n10<-with(plants_phen_neigh,ifelse(phen_num==-9999,phen_n10_s/phen_n10_c,
((phen_n10_s-phen_num)/(phen_n10_c-1))
))
plants_phen_neigh$phen_n05[is.nan(plants_phen_neigh$phen_n05)] <- NA
plants_phen_neigh$phen_n1[is.nan(plants_phen_neigh$phen_n1)] <- NA
plants_phen_neigh[c(1,13:17)]
allplants<-merge(allplants,plants_phen_neigh[c(1,13:17)])
head(allplants)
library(reshape2)
head(loggers[3:8])
pts_air<-as.data.frame(data_pts)[c(1,3:4)]
pts_air<-subset(pts_air,loggerA_id>0)
pts_air_long <- melt(pts_air, id.vars=c("point_id"))
head(pts_air_long)
names(pts_air_long)<-c("point_id","A_S","Location")
pts_air_long<-subset(pts_air_long,!point_id==247)
loggers_select<-loggers[3:8]
loggers_select<-loggers_select[loggers_select$Location %in% pts_air_long$Location,]
loggers_select$Location<-as.factor(loggers_select$Location)
loggers_select$hour<-as.factor(loggers_select$hour)
loggers_select$timeday<-as.factor(loggers_select$timeday)
pts_air_long$point_id<-as.factor(pts_air_long$point_id)
pts_air_long$Location<-as.factor(pts_air_long$Location)
loggers_select$Location<-droplevels(loggers_select$Location)
pts_air_long$Location<-droplevels(pts_air_long$Location)
pts_air_long<-merge(pts_air_long,loggers_select,by="Location")
head(pts_air_long)
pts_air_wide <- dcast(pts_air_long,date+hour+point_id~A_S,value.var="LogData")
head(pts_air_wide)
str(pts_air_wide)
with(pts_air_wide,plot(loggerA_id,loggerS_id,xlab="Air temperature",ylab="Soil temperature",
main="R square = 0.28, P<0.001"))
abline(with(pts_air_wide,lm(loggerS_id~loggerA_id)))
summary(with(pts_air_wide,lm(loggerS_id~loggerA_id)))
with(pts_air_wide,hist(loggerA_id,xlim=c(-5,45),xlab=NULL,main="Air temperature from 24 loggers"))
with(pts_air_wide,hist(loggerS_id,xlim=c(-5,45),xlab=NULL,main="Soil temperature from 24 loggers"))
str(allplants)
save(allplants, file="D:/SU/projects/neighbourhood_effects/2_models/allplants.R")    # save to dedicated folder
save(allplants, file="D:/SU/projects/neighbourhood_effects/2_models/allplants.R")    # save to dedicated folder
