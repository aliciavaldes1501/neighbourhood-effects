library(spdep)
load(file="formula1.R")
load(file="allplants.R")
?knearneigh
?knearneigh
allplants.nb3 <- knearneigh(subset(allplants,!is.na(phen)), k=5,longlat=F)
allplants.nb3
allplants.nb3 <- knearneigh(subset(allplants,!is.na(phen)), k=20,longlat=F)
allplants.nb3
summary(allplants.nb3)
allplants.listw3 <- nb2listw(allplants.nb3)
allplants.listw3 <- knn2nb(allplants.nb3)
allplants.listw3
summary(allplants.listw3)
ME.model1all <-system.time(
ME(formula1, listw=allplants.listw3,
data=subset(allplants,!is.na(phen)),
family=binomial,alpha=0.05,verbose=T),
gcFirst=T)
class(allplants.listw3)
class(allplants.listw1)
load(file="allplants.listw1.R")
class(allplants.listw3)
ME.model1all <-system.time(
ME(formula1, listw=allplants.listw3,
data=subset(allplants,!is.na(phen)),
family=binomial,alpha=0.05,verbose=T),
gcFirst=T)
class(allplants.listw1)
class(allplants.nb)
class(allplants.nb1)
class(allplants.nb3)
class(allplants.listw3)
?nb2listw
allplants.listw3<-nb2listw(allplants.listw3)
ME.model1all <-system.time(
ME(formula1, listw=allplants.listw3,
data=subset(allplants,!is.na(phen)),
family=binomial,alpha=0.05,verbose=T),
gcFirst=T)
formula1
save(allplants.listw1,file="allplants.listw1.R")
load(file="allplants.listw1.R")
library(spdep)
load(file="formula1.R")
load(file="allplants.R")
load(file="allplants.listw1.R")
rm(ME.model1all)
ME.model1all <-ME(formula1, listw=allplants.listw1,
data=subset(allplants,!is.na(phen)),
family=binomial,alpha=0.05,verbose=T)
ME.model1all
save(ME.model1all,file="ME.model1all.R")
summary(ME.model1all)
save(ME.model1all,file="ME.model1all_vectors.R")
formula1
ME.model1all[1]
ME.model1all$vectors[1]
ME.model1all$vectors[,1]
summary(glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2)+
ME.model1all$vectors[,1]))
summary(glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2)+
ME.model1all$vectors[,1],family=binomial,data=subset(allplants,!is.na(phen))))
?moran.test
modelito<-glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2)+
ME.model1all$vectors[,1],family=binomial,data=subset(allplants,!is.na(phen)))
summary(modelito)
res_modelito<-residuals(modelito)
moran1<-moran.test(res_modelito,listw=allplants.listw1)
moram1
moran1
ME.model1all
modelito<-glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2)+
ME.model1all$vectors[,1]+ME.model1all$vectors[,2],family=binomial,data=subset(allplants,!is.na(phen)))
summary(modelito)
modelito1<-glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2)+
ME.model1all$vectors[,1],family=binomial,data=subset(allplants,!is.na(phen)))
modelito2<-glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2)+
ME.model1all$vectors[,1]+ME.model1all$vectors[,2],family=binomial,data=subset(allplants,!is.na(phen)))
summary(modelito1)
summary(modelito2)
res_modelito1<-residuals(modelito1)
res_modelito2<-residuals(modelito2)
rm(modelito)
rm(res_modelito)
moran2<-moran.test(res_modelito2,listw=allplants.listw1)
moran2
summary(glm(attack ~ scale(as.integer(phen)) + scale(Mrub_sum) + scale(pldens_2) +
scale(phen_n2) + scale(as.integer(phen)):scale(Mrub_sum) +
scale(as.integer(phen)):scale(phen_n2) + scale(pldens_2):scale(phen_n2),family=binomial,data=subset(allplants,!is.na(phen))))
NagelkerkeR2(modelito2)
install.packages("MuMIn")
library(MuMIn)
NagelkerkeR2(modelito2)
??NagelkerkeR2
install.packages("fmsb")
library(fmsb)
NagelkerkeR2(modelito2)
