lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,allplants_clean_rubra),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14) # p=0.093, interaction *!
AIC(sem14,aicc=T) # AICc=81.343
# Try to include correlated errors based on independence claims shown in summary
sem14<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14) # p=0.093, interaction *!
AIC(sem14,aicc=T) # AICc=81.343
sem14a<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
summary(sem14a) # p=0.093, interaction *!
AIC(sem14a,aicc=T) # AICc=81.343
summary(sem14a,conserve=T) # p=0.093, interaction *!
AIC(sem14a,aicc=T) # AICc=81.343
AIC(sem14a,aicc=T,conserve=T) # AICc=81.343
sem14a<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
summary(sem14a,conserve=T) # p=0.086, interaction *!
AIC(sem14a,aicc=T) # AICc=81.343
sem14b<-psem(lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
summary(sem14b) # p=0.093, interaction *!
AIC(sem14b,aicc=T) # AICc=81.343
#Starting model
sem14<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
summary(sem14,conserve=T) # p=0, interaction *!
?summary.psem
# Try to include correlated errors based on independence claims shown in summary
sem14<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14) # p=0.093, interaction *!
AIC(sem14,aicc=T) # AICc=81.343
summary(sem14,standardize="range") # p=0.093, interaction *!
summary(lm(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra))
summary(glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra))
sem14<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14) # p=0.093, interaction *!
AIC(sem14,aicc=T) # AICc=81.343
# Repeat model using another distribution for ants
# in order to be able to get standardized coefs
sem15<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
lm(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem15) # p=0.096, interaction *!
AIC(sem15,aicc=T) # AICc=81.199
sem14<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14) # p=0.093, interaction *!
AIC(sem14,aicc=T) # AICc=81.343
sem15<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
lm(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem15) # p=0.096, interaction *!
AIC(sem15,aicc=T) # AICc=81.199
coefs1<-coefs(sem14)
coefs1
coefs2<-coefs(sem15)
coefs2
coefs1
coefs1[10,3]
coefs1[10,8]
str(coefs1[10,8])
str(as.numeric(coefs1[10,8]))
as.numeric(coefs1[10,8])
#Direct effect of PC1 on seed sper fl:
as.numeric(coefs1[19,8])
#Direct effect of PC1 on seed sper fl:
as.numeric(coefs1[20,8])
coefs1
coefs1
coefs1[13,8]
as.numeric(coefs1[13,8])*as.numeric(coefs1[18,8])
0.1197*0.1687
0.1197*0.4345
as.numeric(coefs1[3,8])*as.numeric(coefs1[10,8])*as.numeric(coefs1[18,8])
coefs2
as.numeric(coefs2[3,8])*as.numeric(coefs1[10,8])*as.numeric(coefs1[18,8])
head(allplants_clean_rubra)
head(allplants_clean_rubra$phen_int*round(allplants_clean_rubra$Mrub_sum))
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial")
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_ants+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial")
#Make-up interaction variables
allplants_clean_rubra$phen_ants<-allplants_clean_rubra$phen_int*round(allplants_clean_rubra$Mrub_sum)
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial")
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_ants+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial")
#Make-up interaction variables
allplants_clean_rubra$phen_ants<-allplants_clean_rubra$phen_int*round(allplants_clean_rubra$Mrub_sum)
allplants_clean_rubra$dens_phen<-allplants_clean_rubra$pldens_3*allplants_clean_rubra$phen_n3
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial")
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_ants+pldens_3+phen_n3+dens_phen+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial")
sem14_int<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_ants+pldens_3+phen_n3+dens_phen+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14_int) # p=0.093, interaction *!
AIC(sem14_int,aicc=T) # AICc=81.343
sem14_int<-psem(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
lm(phen_ants~phen_int+round(Mrub_sum),allplants_clean_rubra),
lm(dens_phen~pldens_3+phen_n3,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_ants+pldens_3+phen_n3+dens_phen+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),
phen_n3%~~%pldens_3,phen_int%~~%phen_n3,phen_n3%~~%round(Mrub_sum),pldens_3%~~%round(Mrub_sum),phen_int%~~%pldens_3)
summary(sem14_int) # p=0.093, interaction *!
AIC(sem14_int,aicc=T) # AICc=81.343
coefs(sem14_int)
coefs(sem14_int)[9,8]
phen_to_int<-as.numeric(coefs(sem14_int)[9,8])
ants_to_int<-as.numeric(coefs(sem14_int)[10,8])
pldens_3_to_int<-as.numeric(coefs(sem14_int)[11,8])
phen_n3_to_int<-as.numeric(coefs(sem14_int)[12,8])
phen_to_int
ants_to_int
pldens_3_to_int
phen_n3_to_int
coefs1
as.numeric(coefs1[13,8])*as.numeric(coefs1[18,8])+                                            #PC1->attack->seeds_per_fl
as.numeric(coefs1[1,8])*as.numeric(coefs1[17,8])+                                           #PC1->phen->seeds_per_fl
as.numeric(coefs1[1,8])*as.numeric(coefs1[9,8])*as.numeric(coefs1[18,8])+                   #PC1->phen->attack->seeds_per_fl
as.numeric(coefs1[1,8])*phen_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC1->phen->int->attack->seeds_per_fl
as.numeric(coefs2[3,8])*as.numeric(coefs1[10,8])*as.numeric(coefs1[18,8])+                  #PC1->ants->attack->seeds_per_fl
as.numeric(coefs2[3,8])*ants_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC1->ants->int->attack->seeds_per_fl
as.numeric(coefs1[5,8])*as.numeric(coefs1[11,8])*as.numeric(coefs1[18,8])+                  #PC1->pldens_3->attack->seeds_per_fl
as.numeric(coefs1[5,8])*pldens_3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])+  #PC1->pldens_3->int->attack->seeds_per_fl
as.numeric(coefs2[7,8])*as.numeric(coefs1[12,8])*as.numeric(coefs1[18,8])+                  #PC1->phen_n3->attack->seeds_per_fl
as.numeric(coefs2[7,8])*phen_n3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])    #PC1->phen_n3->int->attack->seeds_per_fl
#Indirect effects of PC1 on seeds per fl acting through attack: -0.2051301
as.numeric(coefs1[13,8])*as.numeric(coefs1[18,8])                          #PC1->attack->seeds_per_fl
#Indirect effects of PC1 on seeds per fl acting through phen: 0.02162098
as.numeric(coefs1[1,8])*as.numeric(coefs1[17,8])                           #PC1->phen->seeds_per_fl
#(Very) indirect effects of PC1 on seeds per fl acting through effects of phen, ants and suit on attack: -0.9933788
as.numeric(coefs1[1,8])*as.numeric(coefs1[9,8])*as.numeric(coefs1[18,8])+                     #PC1->phen->attack->seeds_per_fl
as.numeric(coefs1[1,8])*phen_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC1->phen->int->attack->seeds_per_fl
as.numeric(coefs2[3,8])*as.numeric(coefs1[10,8])*as.numeric(coefs1[18,8])+                  #PC1->ants->attack->seeds_per_fl
as.numeric(coefs2[3,8])*ants_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC1->ants->int->attack->seeds_per_fl
as.numeric(coefs1[5,8])*as.numeric(coefs1[11,8])*as.numeric(coefs1[18,8])+                  #PC1->pldens_3->attack->seeds_per_fl
as.numeric(coefs1[5,8])*pldens_3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])+  #PC1->pldens_3->int->attack->seeds_per_fl
as.numeric(coefs2[7,8])*as.numeric(coefs1[12,8])*as.numeric(coefs1[18,8])+                  #PC1->phen_n3->attack->seeds_per_fl
as.numeric(coefs2[7,8])*phen_n3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])    #PC1->phen_n3->int->attack->seeds_per_fl
phen_to_int
ants_to_int
pldens_3_to_int
phen_n3_to_int
0,2*-0,3
0.2*-0.3
0.2*0.3
0.371*0.291*-0.435+0.371*0.078*0.042*-0.435+0.106*-0.130*-0.435+0.106*0.755*0.042*-0.435+-0.424*0.283*-0.435+-0.424*1.051*-0.238*-0.435+0.598*-0.022*-0.435+0.598*0.259*-0.238*-0.435
coefs(sem14_int)
summary/lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))
summary(lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))
)
summary(sem14)
summary(lm(seeds_per_fl~scale(phen_int)+scale(as.integer(attack))+scale(PC1)+scale(PC2),subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
#Direct effect of PC1 on seed sper fl:
as.numeric(coefs1[20,8])
coefs1
install.packages("semEff")
library(semEff)
?`semEff-package`
citation("semEff")
head(Shipley)
lapply(Shipley.SEM, formula)
Shipley.SEM
semEff(sem14)
class(sem14)
class(Shipley.SEM)
Shipley.SEM
list(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
semEff(list(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
#Direct effect of PC2 on seed sper fl:
as.numeric(coefs1[20,8])
#Total indirect effect of PC2 on seeds per fl: -0.04206903 (prev 0.6608619)
as.numeric(coefs1[14,8])*as.numeric(coefs1[18,8])+                                            #PC2->attack->seeds_per_fl
as.numeric(coefs1[2,8])*as.numeric(coefs1[17,8])+                                           #PC2->phen->seeds_per_fl
as.numeric(coefs1[2,8])*as.numeric(coefs1[9,8])*as.numeric(coefs1[18,8])+                   #PC2->phen->attack->seeds_per_fl
as.numeric(coefs1[2,8])*phen_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC2->phen->int->attack->seeds_per_fl
as.numeric(coefs2[4,8])*as.numeric(coefs1[10,8])*as.numeric(coefs1[18,8])+                  #PC2->ants->attack->seeds_per_fl
as.numeric(coefs2[4,8])*ants_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC2->ants->int->attack->seeds_per_fl
as.numeric(coefs1[6,8])*as.numeric(coefs1[11,8])*as.numeric(coefs1[18,8])+                  #PC2->pldens_3->attack->seeds_per_fl
as.numeric(coefs1[6,8])*pldens_3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])+  #PC2->pldens_3->int->attack->seeds_per_fl
as.numeric(coefs2[8,8])*as.numeric(coefs1[12,8])*as.numeric(coefs1[18,8])+                  #PC2->phen_n3->attack->seeds_per_fl
as.numeric(coefs2[8,8])*phen_n3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])    #PC2->phen_n3->int->attack->seeds_per_fl
#Indirect effects of PC2 on seeds per fl acting through attack: -0.05200965 (prev -0.5916516)
as.numeric(coefs1[14,8])*as.numeric(coefs1[18,8])                                             #PC2->attack->seeds_per_fl
#Indirect effects of PC2 on seeds per fl acting through phen: 0.02514024 (prev -0.02943603)
as.numeric(coefs1[2,8])*as.numeric(coefs1[17,8])                                              #PC2->phen->seeds_per_fl
#(Very) indirect effects of PC2 on seeds per fl acting through effects of phen, ants and suit on attack: -0.01519962 (prev 1.28195)
as.numeric(coefs1[2,8])*as.numeric(coefs1[9,8])*as.numeric(coefs1[18,8])+                     #PC2->phen->attack->seeds_per_fl
as.numeric(coefs1[2,8])*phen_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC2->phen->int->attack->seeds_per_fl
as.numeric(coefs2[4,8])*as.numeric(coefs1[10,8])*as.numeric(coefs1[18,8])+                  #PC2->ants->attack->seeds_per_fl
as.numeric(coefs2[4,8])*ants_to_int*as.numeric(coefs1[15,8])*as.numeric(coefs1[18,8])+      #PC2->ants->int->attack->seeds_per_fl
as.numeric(coefs1[6,8])*as.numeric(coefs1[11,8])*as.numeric(coefs1[18,8])+                  #PC2->pldens_3->attack->seeds_per_fl
as.numeric(coefs1[6,8])*pldens_3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])+  #PC2->pldens_3->int->attack->seeds_per_fl
as.numeric(coefs2[8,8])*as.numeric(coefs1[12,8])*as.numeric(coefs1[18,8])+                  #PC2->phen_n3->attack->seeds_per_fl
as.numeric(coefs2[8,8])*phen_n3_to_int*as.numeric(coefs1[16,8])*as.numeric(coefs1[18,8])    #PC2->phen_n3->int->attack->seeds_per_fl
myModel <- ' # regressions
phen_int~PC1+PC2
round(Mrub_sum)~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2
seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2
'
myModel
myModel <- ' # regressions
y1 + y2 ~ f1 + f2 + x1 + x2
f1 ~ f2 + f3
f2 ~ f3 + x1 + x2
# latent variable definitions
f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9 + y10
# variances and covariances
y1 ~~ y1
y1 ~~ y2
f1 ~~ f2
# intercepts
y1 ~ 1
f1 ~ 1
'
myModel
myModel <- ' # regressions
phen_int~PC1+PC2
round(Mrub_sum)~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2
seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2
'
myModel
fit <- sem(model, data=myModel)
fit <- sem(myModel, data=allplants_clean_rubra)
myModel <- ' # regressions
phen_int~PC1+PC2
Mrub_sum_round~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
as.integer(attack)~phen_int+Mrub_sum_round+phen_int:Mrub_sum_round+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2
seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2
'
fit <- sem(myModel, data=allplants_clean_rubra)
myModel <- ' # regressions
phen_int~PC1+PC2
Mrub_sum_round~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
attack_integer~phen_int+Mrub_sum_round+phen_int:Mrub_sum_round+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2
seeds_per_fl~phen_int+attack_integer+PC1+PC2
'
fit <- sem(myModel, data=allplants_clean_rubra)
allplants_clean_rubra$Mrub_sum_round<-round(allplants_clean_rubra$Mrub_sum)
allplants_clean_rubra$attack_integer<-as.integer(allplants_clean_rubra$attack)
myModel <- ' # regressions
phen_int~PC1+PC2
Mrub_sum_round~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
attack_integer~phen_int+Mrub_sum_round+phen_int:Mrub_sum_round+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2
seeds_per_fl~phen_int+attack_integer+PC1+PC2
'
fit <- sem(myModel, data=allplants_clean_rubra)
varTable(fit)
summary(fit, standardized=TRUE)
allplants_clean_rubra$attack_integer
fit <- sem(myModel, data=allplants_clean_rubra,ordered=c("attack_integer"))
class(allplants_clean_rubra$attack)
myModel <- ' # regressions
phen_int~PC1+PC2
Mrub_sum_round~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
attack~phen_int+Mrub_sum_round+phen_int:Mrub_sum_round+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2
seeds_per_fl~phen_int+attack+PC1+PC2
'
fit <- sem(myModel, data=allplants_clean_rubra,ordered=c("attack"))
myModel <- ' # regressions
phen_int~PC1+PC2
Mrub_sum_round~PC1+PC2
pldens_3~PC1+PC2
phen_n3~PC1+PC2
attack~phen_int+Mrub_sum_round+phen_ants+pldens_3+phen_n3+dens_phen+PC1+PC2
seeds_per_fl~phen_int+attack+PC1+PC2
'
fit <- sem(myModel, data=allplants_clean_rubra,ordered=c("attack"))
summary(fit, standardized=TRUE)
?lavaan
rm(fit)
rm(myModel)
allplants_clean_rubra$Mrub_sum_round<-NULL
allplants_clean_rubra$attack_integer<-NULL
effect1
library(RColorBrewer)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
library(ggpubr)
library(piecewiseSEM)
library(MASS)
library(semEff)
effects1<-semEff(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
Shipley.SEM
lapply(Shipley.SEM, formula)
lapply(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),formula)
lapply(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl))),formula)
?semEff
class(Shipley.SEM)
lapply(list(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm.nb(round(Mrub_sum)~PC1+PC2,allplants_clean_rubra), # Round to avoid non-integers
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+round(Mrub_sum)+phen_int:round(Mrub_sum)+pldens_3+phen_n3+pldens_3:phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))),formula)
effects1<-semEff(list(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
lm(pldens_3~PC1+PC2,allplants_clean_rubra),
lm(phen_n3~PC1+PC2,allplants_clean_rubra),
glm(as.integer(attack)~phen_int+pldens_3+phen_n3+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
effects1
effects1<-semEff(list(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
effects1
effects1
semEff(Shipley.SEM.Boot)
semEff(list(lm(phen_int~PC1+PC2,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1+PC2,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1+PC2,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
library(notifier)
#composing the first notification message
install.packages("devtools")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
library(notifier)
#composing the first notification message
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
install.packages("ps")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
#install.packages("devtools") if devtools is not installed
devtools::install_github("gaborcsardi/notifier")
library(RPushbullet)
install.packages("RPushbullet")
library(RPushbullet)
pbSetup()
pbSetup()
pbSetup(o.bZaklsHLMros17UEDxpcqAPUY7mHmtUW
)
?pbSetup
pbSetup(o.bZaklsHLMros17UEDxpcqAPUY7mHmtUW)
pbSetup(apikey=o.bZaklsHLMros17UEDxpcqAPUY7mHmtUW)
pbSetup(apikey="o.bZaklsHLMros17UEDxpcqAPUY7mHmtUW")
pbPost("note", "Clustering Completed", "Clustering completed in 4hrs 13mins")
pbPost("note", "Clustering Completed", "Clustering completed in 4hrs 13mins")
?pbPost
pbPost("note", "R has finished!")
pbPost("note", "R has finished!")
semEff(list(lm(phen_int~PC1,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
library(RColorBrewer)
library(ggplot2)
library(ggthemes)
library(grid)
library(gridExtra)
library(ggpubr)
library(piecewiseSEM)
library(MASS)
library(semEff)
library(RPushbullet)
semEff(list(lm(phen_int~PC1,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
pbPost("note", "R has finished!")
str(list(lm(phen_int~PC1,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
class(list(lm(phen_int~PC1,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1,subset(allplants_clean_rubra,!is.na(seeds_per_fl)))))
list(lm(phen_int~PC1,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1,
subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
Shipley.SEM
easy_model<-list(lm(phen_int~PC1,subset(allplants_clean_rubra,!is.na(phen_int))),
glm(as.integer(attack)~phen_int+PC1,subset(allplants_clean_rubra,!is.na(phen_int)),family="binomial"),
lm(seeds_per_fl~phen_int+as.integer(attack)+PC1,subset(allplants_clean_rubra,!is.na(seeds_per_fl))))
# Bootstrap model effects (takes a while...)
system.time(easy_model_boot <- bootEff(easy_model, seed = 53908))
pbPost("note", "R has finished!")
easy_model_boot
